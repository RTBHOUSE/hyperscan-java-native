name: build
on: [push, pull_request]
env:
  OSSRH_JIRA_PASSWORD: ${{ secrets.OSSRH_JIRA_PASSWORD }}
jobs:
  create-staging-repo:
    name: Create staging repository
    runs-on: ubuntu-latest
    outputs:
      staging-repo: ${{ steps.create-repo.outputs.repo }}
    steps:
    - uses: actions/checkout@v2
    - id: create-repo
      run: "mvn -B --settings mvnsettings.xml nexus-staging:rc-open -DserverId=ossrh -DnexusUrl=https://oss.sonatype.org/ -DstagingProfileId=72c1cc10566951 -DopenedRepositoryMessageFormat='\n::set-output name=repo::%s'"
  build-native:
    name: Build native libs
    needs: create-staging-repo
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: ${{ matrix.shell }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        arch: [x86_64]
        include:
          - os: windows-latest
            shell: msys2 {0}
          - os: macos-latest
            shell: bash
          - os: ubuntu-latest
            shell: bash
    env:
      SIGN_KEY: ${{ secrets.SIGN_KEY }}
      SIGN_KEY_PASS: ${{ secrets.SIGN_KEY_PASS }}
      STAGING_REPO: ${{ needs.create-staging-repo.outputs.staging-repo }}
    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        if: matrix.os == 'windows-latest'
        with:
          install: base-devel gcc
          path-type: inherit
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Build native binaries
        if: steps.cache.outputs.cache-hit != 'true' && matrix.os != 'ubuntu-latest'
        run: bash build.sh deploy
      - name: Build native binaries in centos container
        if: steps.cache.outputs.cache-hit != 'true' && matrix.os == 'ubuntu-latest'
        uses: docker://ghcr.io/gliwka/centos6-devtoolset7:main
        with:
          args: build.sh deploy
